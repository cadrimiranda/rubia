spring:
  application:
    name: Rubia Chat Server
  
  # Database Configuration
  datasource:
    url: ${DATABASE_URL}
    username: ${DATABASE_USERNAME}
    password: ${DATABASE_PASSWORD}
    driver-class-name: org.postgresql.Driver
  
  # JPA Configuration
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: ${JPA_SHOW_SQL}
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.PostgreSQLDialect
        jdbc:
          time_zone: ${SPRING_JPA_PROPERTIES_HIBERNATE_JDBC_TIME_ZONE}
  
  # Flyway Configuration
  flyway:
    enabled: true
    locations: classpath:db/migration
    baseline-on-migrate: true
  
  # Disable RabbitMQ for now (uncomment to enable)
  autoconfigure:
    exclude: org.springframework.boot.autoconfigure.amqp.RabbitAutoConfiguration
  
  # File Upload Configuration
  servlet:
    multipart:
      max-file-size: ${SPRING_SERVLET_MULTIPART_MAX_FILE_SIZE}
      max-request-size: ${SPRING_SERVLET_MULTIPART_MAX_REQUEST_SIZE}

# Server Configuration
server:
  port: ${SERVER_PORT}

# JWT Configuration
jwt:
  secret: ${JWT_SECRET}
  expiration: ${JWT_EXPIRATION}

# Multi-tenant Configuration
company:
  domain: ${COMPANY_DOMAIN}

# CORS Configuration
cors:
  allowed-origins: ${CORS_ALLOWED_ORIGINS}

# Messaging Configuration
messaging:
  provider: ${MESSAGING_PROVIDER}

# WhatsApp Provider Configuration
whatsapp:
  provider:
    account-id: ${WHATSAPP_ACCOUNT_ID}
    auth-token: ${WHATSAPP_AUTH_TOKEN}
    phone-number: ${WHATSAPP_PHONE_NUMBER}
    api-url: ${WHATSAPP_API_URL}

# Z-API Configuration
zapi:
  client-token: ${CLIENT_TOKEN}
  webhook:
    token: ${ZAPI_WEBHOOK_TOKEN}
    base-url: ${Z_API_WEBHOOK_BASE_URL}
  media:
    max-file-size: ${ZAPI_MEDIA_MAX_FILE_SIZE}
    allowed-types: ${ZAPI_MEDIA_ALLOWED_TYPES}
  base-url: ${Z_API_BASE_URL}
  connection-monitor:
    enabled: ${Z_API_CONNECTION_MONITOR_ENABLED}
    check-interval: ${Z_API_CONNECTION_MONITOR_CHECK_INTERVAL}
  timeouts:
    connection: ${ZAPI_CONNECTION_TIMEOUT}
    read: ${ZAPI_READ_TIMEOUT}
  retry:
    max-attempts: ${ZAPI_RETRY_MAX_ATTEMPTS}
    backoff-delay: ${ZAPI_RETRY_BACKOFF_DELAY}

# Security Configuration
security:
  require-ssl: ${SECURITY_REQUIRE_SSL}

# Logging Configuration
logging:
  level:
    root: ${LOGGING_LEVEL_ROOT}
    com.ruby: ${LOGGING_LEVEL_COM_RUBY}
    com.ruby.rubia_server.core.adapter.impl.ZApiAdapter: DEBUG
    com.ruby.rubia_server.core.service.MessagingService: DEBUG
    org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer: ERROR

# Actuator Configuration
management:
  endpoints:
    web:
      exposure:
        include: "*"
    enabled-by-default: true
  endpoint:
    health:
      show-details: always
      enabled: true
    info:
      enabled: true

# Message Template Configuration
app:
  message-template:
    revision:
      fail-on-error: ${MESSAGE_TEMPLATE_REVISION_FAIL_ON_ERROR}